_target_: boltzgen.task.analyze.analyze.Analyze

name: analyze
design_dir: null
debug: false
num_processes: 32

# Common metrics to compute
affinity_metrics: false
backbone_fold_metrics: true
noncovalents_original: true
noncovalents_refolded: true
delta_sasa_original: true
delta_sasa_refolded: true
largest_hydrophobic: false
largest_hydrophobic_refolded: true
run_clustering: false

# Liability analysis
liability_analysis: true
liability_modality: peptide
liability_peptide_type: linear

# Uncommon metrics
diversity_original: false
diversity_refolded: false
diversity_per_target_original: false
diversity_per_target_refolded: false
novelty_original: false
novelty_refolded: false
novelty_per_target_original: false
novelty_per_target_refolded: false
ss_conditioning_metrics: false 
sequence_recovery: false
native: false # This is only required for evaluations when we want to compute sequence recovery 
compute_lddts: false # This is time intensive to compute
  

data:
  _target_: boltzgen.task.predict.data_from_generated.FromGeneratedDataModule
  cfg:
    _target_: boltzgen.task.predict.data_from_generated.DataConfig
    tokenizer:
      _target_: boltzgen.data.tokenize.tokenizer.Tokenizer
      atomize_modified_residues: false
    featurizer:
      _target_: boltzgen.data.feature.featurizer.Featurizer

    suffix: .cif
    suffix_metadata: .npz
    suffix_native: _native.cif
    samples_per_target: 1000000000000000
    num_targets: 10000000000000
    moldir: null

    batch_size: 1
    num_workers: 4
    pin_memory: true
    disulfide_prob: 1.0
    disulfide_on: true
  design_dir: ${design_dir}
  target_templates: false
  return_native: ${native}
  fail_if_no_designs: true
